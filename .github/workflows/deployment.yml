name: deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}


      - name: Setting .env
        run: |
          echo "REACT_APP_HOST=$REACT_APP_HOST" >> .env.production
          echo "REACT_APP_REDIRECT_KAKAO=$REACT_APP_REDIRECT_KAKAO" >> .env.production
          echo "REACT_APP_REDIRECT_NAVER=$REACT_APP_REDIRECT_NAVER" >> .env.production
          echo "REACT_APP_REDIRECT_GOOGLE=$REACT_APP_REDIRECT_GOOGLE" >> .env.production
          echo "REACT_STATE_CODE=$REACT_STATE_CODE" >> .env.production

        env:
          REACT_APP_HOST: ${{ secrets.REACT_APP_HOST }}
          REACT_APP_REDIRECT_KAKAO: ${{ secrets.REACT_APP_REDIRECT_KAKAO }}
          REACT_APP_REDIRECT_NAVER: ${{ secrets.REACT_APP_REDIRECT_NAVER }}
          REACT_APP_REDIRECT_GOOGLE: ${{ secrets.REACT_APP_REDIRECT_GOOGLE }}
          REACT_STATE_CODE: ${{ secrets.REACT_STATE_CODE }}
          

      - name: env 파일
        run: cat .env.production

      - name: Install dependencies
        run: npm install

      - name: Build
        run: CI="false" npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: aws s3 sync ./build s3://${{ secrets.DEV_AWS_S3_BUCKET }} --delete

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{secrets.DEV_AWS_DISTRIBUTION_ID}} --paths "/*"

